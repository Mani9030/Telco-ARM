{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"VnetAddressPrefix": {
			"type": "string",
			"defaultValue": "172.24.0.0/21"
		},
		"servicePrincipalClientId": {
			"type": "securestring",
			"metadata": {
				"description": "The Service Principal Client ID."
			}
		},
		"servicePrincipalClientSecret": {
			"type": "securestring",
			"metadata": {
				"description": "The Service Principal Client Secret."
			}
		},
		"kubernetesVersion": {
			"type": "string",
			"defaultValue": "1.21.7"
		}
	},
	"variables": {
		"NewRGName": "[replace(resourceGroup().name,'RG-', '')]"
	},
	"resources": [
		{
			"type": "Microsoft.EventHub/namespaces",
			"apiVersion": "2018-01-01-preview",
			"name": "[concat(variables('NewRGName'),'-EvtHub-',copyIndex(1))]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard",
				"tier": "Standard",
				"capacity": 1
			},
			"properties": {
				"zoneRedundant": false,
				"isAutoInflateEnabled": true,
				"maximumThroughputUnits": 20,
				"kafkaEnabled": true
			},
			"copy": {
				"name": "namespace",
				"count": 1,
				"mode": "serial",
				"batchSize": 1
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[concat(variables('NewRGName'), '-NSG')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"securityRules": [
					{
						"name": "web_rule",
						"properties": {
							"description": "Allow WEB",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "80",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 101,
							"direction": "Inbound"
						}
					},
					{
						"name": "web_rule_2",
						"properties": {
							"description": "Allow WEB 2",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "8080",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 102,
							"direction": "Inbound"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.EventHub/namespaces/AuthorizationRules",
			"apiVersion": "2017-04-01",
			"name": "[concat(variables('NewRGName'),'-EvtHub-', copyIndex(1), '/RootManageSharedAccessKey')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', concat(variables('NewRGName'),'-EvtHub-', copyIndex(1)))]"
			],
			"properties": {
				"rights": [
					"Listen",
					"Manage",
					"Send"
				]
			},
			"copy": {
				"name": "AuthorizationRules",
				"count": 1,
				"mode": "serial",
				"batchSize": 1
			}
		},
		{
			"type": "Microsoft.EventHub/namespaces/eventhubs",
			"apiVersion": "2017-04-01",
			"name": "[concat(variables('NewRGName'),'-EvtHub-', copyIndex(1), '/aggregator-1')]",
			"location": "Central India",
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', concat(variables('NewRGName'),'-EvtHub-', copyIndex(1)))]"
			],
			"properties": {
				"messageRetentionInDays": 3,
				"partitionCount": 32,
				"status": "Active"
			},
			"copy": {
				"name": "eventhubs",
				"count": 1,
				"mode": "serial",
				"batchSize": 1
			}
		},
		{
			"type": "Microsoft.EventHub/namespaces/networkRuleSets",
			"apiVersion": "2018-01-01-preview",
			"name": "[concat(variables('NewRGName'),'-EvtHub-', copyIndex(1), '/default')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', concat(variables('NewRGName'),'-EvtHub-', copyIndex(1)))]"
			],
			"properties": {
				"defaultAction": "Deny",
				"virtualNetworkRules": [],
				"ipRules": []
			},
			"copy": {
				"name": "networkRuleSets",
				"count": 1,
				"mode": "serial",
				"batchSize": 1
			}
		},
		{
			"name": "[concat(variables('NewRGName'), '-Vnet')]",
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2020-08-01",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('NewRGName'), '-NSG'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[parameters('vnetAddressPrefix')]"
					]
				},
				"virtualNetworkPeerings": [],
				"enableDdosProtection": false,
				"enableVmProtection": false
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"apiVersion": "2020-05-01",
			"name": "[concat(variables('NewRGName'), '-vnet/subnet1')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', concat(variables('NewRGName'), '-Vnet'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('NewRGName'), '-NSG'))]"
			],
			"properties": {
				"addressPrefix": "[parameters('vnetAddressPrefix')]",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('NewRGName'), '-NSG'))]"
				},
				"delegations": [],
				"privateEndpointNetworkPolicies": "Enabled",
				"privaTELinkServiceNetworkPolicies": "Enabled"
			}
		},
		{
			"type": "Microsoft.OperationalInsights/workspaces",
			"name": "[concat(variables('NewRGName'),'-LAWKS')]",
			"apiVersion": "2020-08-01",
			"location": "centralindia",
			"properties": {
				"sku": {
					"name": "pergb2018"
				},
				"retentionInDays": 30,
				"features": {
					"searchVersion": 1,
					"legacy": 0,
					"enableLogAccessUsingOnlyResourcePermissions": true
				}
			}
		},
		{
			"type": "Microsoft.ContainerService/managedClusters",
			"apiVersion": "2020-02-01",
			"name": "[concat(variables('NewRGName'),'-AKS')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.OperationalInsights/workspaces', concat(variables('NewRGName'),'-LAWKS'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(variables('NewRGName'), '-Vnet'), 'subnet1')]"
			],
			"properties": {
				"kubernetesVersion": "[parameters('kubernetesVersion')]",
				"dnsPrefix": "[concat(variables('NewRGName'), '-AKSClusterdns')]",
				"agentPoolProfiles": [
					{
						"name": "node1",
						"count": 1,
						"vmSize": "Standard_D8as_v4",
						"osDiskSizeGB": 120,
						"vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(variables('NewRGName'), '-Vnet'), 'subnet1')]",
						"maxPods": 30,
						"enableAutoScaling": true,
						"minCount": 1,
						"maxCount": 20,
						"type": "VirtualMachineScaleSets",
						"orchestratorVersion": "[parameters('kubernetesVersion')]",
						"osType": "Linux",
						"linuxOSConfig": {
                            "sysctls": {
                                "netCoreRmemMax": 134217728,
                                "netCoreWmemMax": 134217728,
                                "netIpv4TcpTwReuse": true
                            }
                        }
					}
				],
				"servicePrincipalProfile": {
					"clientId": "[parameters('servicePrincipalClientId')]",
					"secret": "[parameters('servicePrincipalClientSecret')]"
				},
				"addonProfiles": {
					"httpApplicationRouting": {
						"enabled": true
					},
					"omsagent": {
						"enabled": true,
						"config": {
							"logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', concat(variables('NewRGName'),'-LAWKS'))]"
						}
					}
				},
				"nodeResourceGroup": "[concat('MC_TBS-RG-TEL_', variables('NewRGName'), '_', resourceGroup().location )]",
				"enableRBAC": true,
				"networkProfile": {
					"networkPlugin": "azure",
					"loadBalancerSku": "standard",
					"loadBalancerProfile": {
						"managedOutboundIPs": {
							"count": 1
						}
					},
					"serviceCidr": "10.0.0.0/16",
					"dnsServiceIP": "10.0.0.10",
					"dockerBridgeCidr": "172.17.0.1/16",
					"outboundType": "loadBalancer"
				},
				"autoScalerProfile": {
					"max-graceful-termination-sec": "600",
					"scale-down-delay-after-add": "10m",
					"scale-down-delay-after-delete": "10s",
					"scale-down-delay-after-failure": "3m",
					"scale-down-unneeded-time": "10m",
					"scale-down-unready-time": "20m",
					"scale-down-utilization-threshold": "0.5",
					"scan-interval": "10s"
				}
			}
		},
		{
			"type": "Microsoft.ContainerService/managedClusters/agentPools",
			"apiVersion": "2020-02-01",
			"name": "[concat(variables('NewRGName'),'-AKS','/node1')]",
			"dependsOn": [
				"[resourceId('Microsoft.ContainerService/managedClusters', concat(variables('NewRGName'),'-AKS'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(variables('NewRGName'), '-Vnet'), 'subnet1')]"
			],
			"properties": {
				"count": 3,
				"vmSize": "Standard_D8as_v4",
				"osDiskSizeGB": 120,
				"vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(variables('NewRGName'), '-Vnet'), 'subnet1')]",
				"maxPods": 30,
				"type": "VirtualMachineScaleSets",
				"orchestratorVersion": "[parameters('kubernetesVersion')]",
				"osType": "Linux",
				"enableAutoScaling": true,
				"minCount": 1,
				"maxCount": 20,
				"mode": "System",
				"linuxOSConfig": {
                    "sysctls": {
                        "netCoreRmemMax": 134217728,
                        "netCoreWmemMax": 134217728,
                        "netIpv4TcpTwReuse": true
                    }
                }
			}
		},
		{
			"type": "Microsoft.Cache/Redis",
			"apiVersion": "2019-07-01",
			"name": "[concat(variables('NewRGName'),'-RedisCache')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"sku": {
					"name": "Standard",
					"family": "C",
					"capacity": 1
				},
				"enableNonSslPort": false,
				"redisConfiguration": {
					"maxclients": "1000",
					"maxmemory-reserved": "50",
					"maxfragmentationmemory-reserved": "50",
					"maxmemory-delta": "50"
				}
			}
		}
	]
}
